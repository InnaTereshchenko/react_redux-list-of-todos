{"version":3,"sources":["TodoItem.js","TodoList.js","api.js","App.js","store.js","index.js"],"names":["connect","state","todos","dispatch","setTodos","newTodos","type","_ref","todo","react_default","a","createElement","id","title","user","name","completed","onClick","filter","item","selectedSort","setSelectedSort","sort","sortType","sortedTodos","Object","toConsumableArray","b","localeCompare","reverse","className","map","src_TodoItem","getTodosFromServer","response","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getUsersFromServer","_context2","isLoading","buttonStatus","setIsLoading","status","setButtonStatus","_ref2","_ref3","users","preparedTodos","Promise","all","slicedToArray","objectSpread2","find","userId","src_TodoList","store","createStore","action","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6455008d.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst TodoItem = ({ todo, todos, setTodos }) => {\n  const deleteTodo = (id) => {\n    setTodos(todos.filter(item => item.id !== id));\n  };\n\n  return (\n    <tr>\n      <td>{todo.id}</td>\n      <td>{todo.title}</td>\n      <td>{todo.user.name}</td>\n      {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n      <td>{todo.completed ? <span>&#9989;</span> : <span>&#10060;</span>}</td>\n      <td>\n        <button\n          type=\"button\"\n          onClick={() => deleteTodo(todo.id)}\n        >\n          <span>&#10008;</span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst getData = state => ({\n  todos: state.todos,\n});\n\nconst getMethods = dispatch => ({\n  setTodos: newTodos => dispatch({\n    type: 'SET_TODOS',\n    todos: newTodos,\n  }),\n});\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    user: PropTypes.object,\n    completed: PropTypes.bool,\n  }).isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n\nexport default connect(getData, getMethods)(TodoItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, setTodos, selectedSort, setSelectedSort }) => {\n  const sort = (sortType) => {\n    let sortedTodos = [];\n\n    switch (sortType) {\n      case 'id':\n        sortedTodos = [...todos].sort((a, b) => a.id - b.id);\n        break;\n      case 'title':\n        sortedTodos = [...todos].sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case 'user':\n        sortedTodos = [...todos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name));\n        break;\n      case 'status':\n        sortedTodos = [...todos].sort((a, b) => +b.completed - +a.completed);\n        break;\n      default:\n    }\n\n    selectedSort === sortType\n      ? setTodos([...todos].reverse())\n      : setTodos(sortedTodos);\n    setSelectedSort(sortType);\n  };\n\n  return (\n    <table className=\"pure-table pure-table-bordered\">\n      <thead>\n        <tr>\n          <th className=\"td\" onClick={() => sort('id')}>Id</th>\n          <th className=\"td\" onClick={() => sort('title')}>Title</th>\n          <th className=\"td\" onClick={() => sort('user')}>User</th>\n          <th className=\"td\" onClick={() => sort('status')}>Status</th>\n          <th className=\"td\">Delete task</th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => <TodoItem todo={todo} />)}\n      </tbody>\n    </table>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setTodos: PropTypes.func.isRequired,\n  selectedSort: PropTypes.string.isRequired,\n  setSelectedSort: PropTypes.func.isRequired,\n};\n\nconst getData = state => ({\n  todos: state.todos,\n  selectedSort: state.selectedSort,\n});\n\nconst getMethods = dispatch => ({\n  setTodos: newTodos => dispatch({\n    type: 'SET_TODOS',\n    todos: newTodos,\n  }),\n  setSelectedSort: type => dispatch({\n    type: 'SET_SORT_TYPE',\n    selectedSort: type,\n  }),\n});\n\nexport default connect(getData, getMethods)(TodoList);\n","const todosURL = 'https://jsonplaceholder.typicode.com/todos';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getTodosFromServer = async() => {\n  const response = await fetch(todosURL);\n\n  return response.json();\n};\n\nexport const getUsersFromServer = async() => {\n  const response = await fetch(usersURL);\n\n  return response.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TodoList from './TodoList';\nimport { getTodosFromServer, getUsersFromServer } from './api';\n\nfunction App({\n  setTodos, isLoading, setIsLoading, buttonStatus, setButtonStatus,\n}) {\n  const handleLoading = async() => {\n    setIsLoading(true);\n\n    const [todos, users] = await Promise.all(\n      [getTodosFromServer(), getUsersFromServer()]\n    );\n\n    setIsLoading(false);\n    setButtonStatus(false);\n\n    const preparedTodos = todos.map(todo => ({\n      ...todo,\n      user: users.find(user => todo.userId === user.id),\n    }));\n\n    setTodos(preparedTodos);\n\n    return preparedTodos;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"App\">\n        <h1>List of Todos</h1>\n        <h2 className=\"start-page\">Loading...</h2>\n      </div>\n    );\n  }\n\n  return buttonStatus\n    ? (\n      <div className=\"App\">\n        <h1>List of Todos</h1>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={handleLoading}\n        >\n          Load\n        </button>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <h1>List of Todos</h1>\n        <TodoList />\n      </div>\n    );\n}\n\nconst getData = state => ({\n  isLoading: state.isLoading,\n  buttonStatus: state.buttonStatus,\n});\n\nconst getMethods = dispatch => ({\n  setTodos: newTodos => dispatch({\n    type: 'SET_TODOS',\n    todos: newTodos,\n  }),\n  setIsLoading: status => dispatch({\n    type: 'SET_LOADING',\n    isLoading: status,\n  }),\n  setButtonStatus: status => dispatch({\n    type: 'SET_BUTTON',\n    buttonStatus: status,\n  }),\n});\n\nApp.propTypes = {\n  setTodos: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  setIsLoading: PropTypes.func.isRequired,\n  buttonStatus: PropTypes.bool.isRequired,\n  setButtonStatus: PropTypes.func.isRequired,\n};\n\nexport default connect(getData, getMethods)(App);\n","import { createStore } from 'redux';\n\nconst rootReduser = (state, action) => {\n  switch (action.type) {\n    case 'SET_TODOS':\n      return {\n        ...state,\n        todos: action.todos,\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.isLoading,\n      };\n    case 'SET_BUTTON':\n      return {\n        ...state,\n        buttonStatus: action.buttonStatus,\n      };\n    case 'SET_SORT_TYPE':\n      return {\n        ...state,\n        selectedSort: action.selectedSort,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  buttonStatus: true,\n  selectedSort: 'id',\n};\n\nconst store = createStore(rootReduser, initialState);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}